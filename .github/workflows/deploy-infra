name: Build and push to ECR

on:
  push:
    branches:
      - main

env:
  IMAGE_URI: 486166602683.dkr.ecr.us-east-1.amazonaws.com/techrepo:latest
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }} #486166602683.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        
      - name: Ensure ECR repository exists
        run:  |
          aws ecr describe-repositories --repository-names "$ECR_REPOSITORY" || \
          aws ecr create-repository --repository-name "$ECR_REPOSITORY" --region "$AWS_REGION"
  
      - name: Build, tag, and push image
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          # Validar que el secret esté definido
          if [ -z "$ECR_REPOSITORY" ]; then
            echo "ERROR: ECR_REPOSITORY no está definido."
            exit 1
          fi

          # Convertir nombre del repo a minúsculas
          REPO_NAME=$(echo "$ECR_REPOSITORY" | tr '[:upper:]' '[:lower:]')
          echo "Construyendo imagen Docker con repo: $REPO_NAME"

          # Build de la imagen
          docker build -t $REPO_NAME:$IMAGE_TAG -f ./docker/Dockerfile ./docker
          # Tag para ECR
          docker tag $REPO_NAME:$IMAGE_TAG $ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG
          # Push a ECR
          echo "Pushing image to ECR: $ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG"
          docker push $ECR_REGISTRY/$REPO_NAME:$IMAGE_TAG

      #  Guardar URI 
      - name: Save image URI to file
        run: |
          mkdir -p artifacts
          echo "${ECR_REGISTRY}/${ECR_REPOSITORY}:latest" > artifacts/image-uri.txt

      # 4️⃣ Read the Docker image URI into an output variable
      - name: Read image URI
        id: image
        run: |
          echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT
